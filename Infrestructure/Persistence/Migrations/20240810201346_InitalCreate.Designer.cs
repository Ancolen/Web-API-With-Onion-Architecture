// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240810201346_InitalCreate")]
    partial class InitalCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesID")
                        .HasColumnType("int");

                    b.Property<int>("ProductsID")
                        .HasColumnType("int");

                    b.HasKey("CategoriesID", "ProductsID");

                    b.HasIndex("ProductsID");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("Domain.Entities.Brand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ID");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 388, DateTimeKind.Local).AddTicks(6009),
                            IsDeleted = false,
                            Name = "Beauty"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 388, DateTimeKind.Local).AddTicks(6057),
                            IsDeleted = false,
                            Name = "Health, Grocery & Movies"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 388, DateTimeKind.Local).AddTicks(6068),
                            IsDeleted = true,
                            Name = "Books & Garden"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("QueueID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 388, DateTimeKind.Local).AddTicks(7407),
                            IsDeleted = false,
                            Name = "Electronic",
                            ParentID = 0,
                            QueueID = 1
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 388, DateTimeKind.Local).AddTicks(7409),
                            IsDeleted = false,
                            Name = "House & Life",
                            ParentID = 0,
                            QueueID = 2
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 388, DateTimeKind.Local).AddTicks(7410),
                            IsDeleted = false,
                            Name = "Computer",
                            ParentID = 1,
                            QueueID = 1
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 388, DateTimeKind.Local).AddTicks(7411),
                            IsDeleted = false,
                            Name = "Furniture",
                            ParentID = 2,
                            QueueID = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Detail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 390, DateTimeKind.Local).AddTicks(7181),
                            Description = "Lambadaki exercitationem gazete.",
                            IsDeleted = false,
                            Title = "Quis."
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 390, DateTimeKind.Local).AddTicks(7213),
                            Description = "Sıradanlıktan voluptatem dağılımı.",
                            IsDeleted = false,
                            Title = "Nihil koyun."
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 390, DateTimeKind.Local).AddTicks(7243),
                            Description = "Modi voluptatem nisi.",
                            IsDeleted = true,
                            Title = "Tempora anlamsız ut."
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BrandID = 1,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 393, DateTimeKind.Local).AddTicks(6653),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Discount = 0.506599704379120m,
                            IsDeleted = false,
                            Price = 963.38m,
                            Title = "Rustic Frozen Car"
                        },
                        new
                        {
                            ID = 2,
                            BrandID = 3,
                            CreatedDate = new DateTime(2024, 8, 10, 23, 13, 46, 393, DateTimeKind.Local).AddTicks(6676),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Discount = 1.184243413693090m,
                            IsDeleted = false,
                            Price = 353.63m,
                            Title = "Fantastic Metal Shoes"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Detail", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.HasOne("Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
